worker_processes 4;
pid /var/run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_names_hash_bucket_size 64;
	server_tokens off;
	server_name_in_redirect off;

	include mime.types;
	default_type application/octet-stream;

	# Logging
	access_log off;
	error_log stderr;

	# Prevent nginx from adding compression; this interacts badly with Sandstorm
	# WebSession due to https://github.com/sandstorm-io/sandstorm/issues/289
	gzip off;

	# Trust the sandstorm-http-bridge's X-Forwarded-Proto.
	map $http_x_forwarded_proto $fe_https {
		default "";
		https on;
	}

	server {
		listen 8000 default_server;
		listen [::]:8000 default_server ipv6only=on;

		# Allow arbitrarily large bodies - Sandstorm can handle them, and requests
		# are authenticated already, so there's no reason for apps to add additional
		# limits by default.
		client_max_body_size 0;

		server_name localhost;
		root /opt/www/html/public;

		index index.html index.htm index.php;

		charset utf-8;

		location / {
			try_files $uri $uri/ /index.php?$query_string;
		}

		error_page 404 500 502 503 504 /index.php;

		location ~ \.php$ {
			fastcgi_pass unix:/var/run/php/php-fpm.sock;
			fastcgi_index index.php;
			fastcgi_split_path_info ^(.+\.php)(/.+)$;

			# Check that the PHP script exists before passing it
			try_files $fastcgi_script_name =404;

			fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
			# Bypass the fact that try_files resets $fastcgi_path_info
			# see: http://trac.nginx.org/nginx/ticket/321
			set $path_info $fastcgi_path_info;
			fastcgi_param PATH_INFO $path_info;

			fastcgi_param  QUERY_STRING       $query_string;
			fastcgi_param  REQUEST_METHOD     $request_method;
			fastcgi_param  CONTENT_TYPE       $content_type;
			fastcgi_param  CONTENT_LENGTH     $content_length;

			fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
			fastcgi_param  REQUEST_URI        $request_uri;
			fastcgi_param  DOCUMENT_URI       $document_uri;
			fastcgi_param  DOCUMENT_ROOT      $document_root;
			fastcgi_param  SERVER_PROTOCOL    $server_protocol;
			fastcgi_param  HTTPS              $fe_https if_not_empty;

			fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
			fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

			fastcgi_param  REMOTE_ADDR        $remote_addr;
			fastcgi_param  REMOTE_PORT        $remote_port;
			fastcgi_param  SERVER_ADDR        $server_addr;
			fastcgi_param  SERVER_PORT        $server_port;
			fastcgi_param  SERVER_NAME        $server_name;

			# PHP only, required if PHP was built with --enable-force-cgi-redirect
			fastcgi_param  REDIRECT_STATUS    200;
		}

		# Adding the cache control header for js and css files
		# Make sure it is BELOW the PHP block
		location ~ \.(?:css|js|woff2?|svg|gif|json)$ {
			try_files $uri /index.php$request_uri;
			add_header Cache-Control "public, max-age=15778463";

			## HSTS ##
			# Add the 'Strict-Transport-Security' headers to enable HSTS protocol.
			# Note it is intended to have those duplicated to the ones above.
			# WARNING: Only add the preload option once you read about the consequences: https://hstspreload.org/.
			# This form will add the domain to a hardcoded list that is shipped in all major browsers and getting
			# removed from this list could take several months.
			#
			#add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;" always;

			# add_header Referrer-Policy "no-referrer" always;
			# add_header X-Content-Type-Options "nosniff" always;
			# add_header X-Download-Options "noopen" always;
			# add_header X-Frame-Options "SAMEORIGIN" always;
			# add_header X-Permitted-Cross-Domain-Policies "none" always;
			# add_header X-Robots-Tag "none" always;
			# add_header X-XSS-Protection "1; mode=block" always;

			# Optional: Don't log access to assets
			access_log off;
		}

		location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ {
			try_files $uri /index.php$request_uri;

			# Optional: Don't log access to assets
			access_log off;
		}

		# deny access to .htaccess files
		location ~ /\.ht {
			deny all;
		}
	}
}
